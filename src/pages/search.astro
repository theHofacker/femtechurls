---
// src/pages/search.astro - Simplified version focused on reliability
import BaseLayout from '../layouts/BaseLayout.astro';
import NewsCard from '../components/NewsCard.astro';
import SkeletonCard from '../components/SkeletonCard.astro';
import { fetchNews } from '../utils/feedAggregator';

// Get the search query directly from URL parameters
const query = Astro.url.searchParams.get('q') || '';
console.log("Search query received:", query);

// Search results array
let results = [];

// Only search if we have a query
if (query && query.trim() !== '') {
  try {
    // Fetch all news items
    const allNews = await fetchNews();
    console.log(`Fetched ${allNews.length} news items`);
    
    // Normalize the query for case-insensitive search
    const normalizedQuery = query.toLowerCase().trim();
    
    // Filter news items based on the query
    results = allNews.filter(item => {
      const title = (item.title || '').toLowerCase();
      const description = (item.description || '').toLowerCase();
      const sourceName = (item.sourceName || '').toLowerCase();
      
      return title.includes(normalizedQuery) || 
             description.includes(normalizedQuery) || 
             sourceName.includes(normalizedQuery);
    });
    
    console.log(`Found ${results.length} results for "${normalizedQuery}"`);
  } catch (error) {
    console.error('Error searching news:', error);
  }
}

// Group results by source
const groupedBySource = results.reduce((acc, item) => {
  if (!acc[item.sourceName]) {
    acc[item.sourceName] = [];
  }
  acc[item.sourceName].push(item);
  return acc;
}, {});

const sources = Object.keys(groupedBySource);
---

<BaseLayout title={`Search Results for "${query}" - FemTechURLs`}>
  <div class="mb-8">
    <h1 class="text-3xl font-bold text-gray-900 mb-2">Search Results</h1>
    <p class="text-gray-600">
      {results.length} results found for "{query}"
    </p>
  </div>
  
  <!-- Simplified search form with no preventDefault or custom handling -->
  <div class="mb-8">
    <form action="/search" method="get" class="flex gap-2">
      <div class="flex-1 relative">
        <input
          type="search"
          name="q"
          value={query}
          placeholder="Search..."
          class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent"
        />
      </div>
      <button 
        type="submit"
        class="px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2"
      >
        Search
      </button>
    </form>
  </div>
  
  <!-- Results display -->
  {sources.length > 0 ? (
    <div class="space-y-12">
      {sources.map(source => (
        <section>
          <h2 class="text-2xl font-bold text-gray-900 mb-6">{source}</h2>
          <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
            {groupedBySource[source].map(item => (
              <NewsCard
                title={item.title}
                description={item.description}
                link={item.link}
                date={item.date}
                source={item.sourceName}
                image={item.image}
                category="FemTech News & Innovation"
              />
            ))}
          </div>
        </section>
      ))}
    </div>
  ) : query ? (
    <div class="text-center py-16">
      <div class="text-gray-500 mb-6">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
        </svg>
        <h2 class="text-xl font-medium mt-4">No results found</h2>
        <p class="mt-2">Try different keywords or check your spelling</p>
      </div>
    </div>
  ) : (
    <div class="text-center py-16">
      <div class="text-gray-500">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
        </svg>
        <h2 class="text-xl font-medium mt-4">Enter a search term</h2>
        <p class="mt-2">Search for topics in women's health technology</p>
      </div>
    </div>
  )}
</BaseLayout>

<!-- Simple script with no event handling that could interfere with form -->
<script>
  // Only focus the search input - nothing else
  document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.querySelector('input[name="q"]');
    if (searchInput instanceof HTMLInputElement) {
      searchInput.focus();
    }
  });
</script>