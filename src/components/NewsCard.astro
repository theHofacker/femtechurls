---
import { formatDate } from '../utils/feedAggregator';

interface Props {
  title: string;
  description: string;
  link: string;
  date: Date | string;
  source: string;
  image?: string; // Add optional image URL property
  category?: string; // Add optional category for color theming
}

const { title, description, link, date, source, image, category = 'default' } = Astro.props;

// Format description - truncate if too long
const truncatedDescription = description && description.length > 150 
  ? `${description.substring(0, 150)}...` 
  : description;

// Format date for display
const formattedDate = formatDate(date);

// Calculate time ago
const getTimeAgo = (dateValue: Date | string) => {
  try {
    const date = typeof dateValue === 'string' ? new Date(dateValue) : dateValue;
    
    if (!(date instanceof Date) || isNaN(date.getTime())) {
      return '';
    }
    
    const now = new Date();
    const diffMs = now.getTime() - date.getTime();
    const diffSec = Math.floor(diffMs / 1000);
    const diffMin = Math.floor(diffSec / 60);
    const diffHour = Math.floor(diffMin / 60);
    const diffDay = Math.floor(diffHour / 24);
    
    if (diffDay > 30) {
      return '';
    } else if (diffDay > 0) {
      return `${diffDay}d ago`;
    } else if (diffHour > 0) {
      return `${diffHour}h ago`;
    } else if (diffMin > 0) {
      return `${diffMin}m ago`;
    } else {
      return 'just now';
    }
  } catch (e) {
    console.error('Error calculating time ago:', e);
    return '';
  }
};

const timeAgo = getTimeAgo(date);

// Color mapping for different categories
const categoryColors = {
  default: {
    bg: 'bg-white',
    dark: 'dark:bg-gray-800',
    border: 'border-purple-100',
    accent: 'text-purple-600 dark:text-purple-400',
    hover: 'hover:border-purple-300',
  },
  'FemTech News & Innovation': {
    bg: 'bg-white',
    dark: 'dark:bg-gray-800',
    border: 'border-purple-100',
    accent: 'text-purple-600 dark:text-purple-400',
    hover: 'hover:border-purple-300',
  },
  'Cardiovascular': {
    bg: 'bg-white',
    dark: 'dark:bg-gray-800',
    border: 'border-red-100',
    accent: 'text-red-600 dark:text-red-400',
    hover: 'hover:border-red-300',
  },
  'Menstrual health': {
    bg: 'bg-white',
    dark: 'dark:bg-gray-800',
    border: 'border-pink-100',
    accent: 'text-pink-600 dark:text-pink-400',
    hover: 'hover:border-pink-300',
  },
  'Maternal health': {
    bg: 'bg-white',
    dark: 'dark:bg-gray-800',
    border: 'border-blue-100',
    accent: 'text-blue-600 dark:text-blue-400',
    hover: 'hover:border-blue-300',
  },
  'Perimenopause': {
    bg: 'bg-white',
    dark: 'dark:bg-gray-800',
    border: 'border-orange-100',
    accent: 'text-orange-600 dark:text-orange-400',
    hover: 'hover:border-orange-300',
  },
  'Cancer': {
    bg: 'bg-white',
    dark: 'dark:bg-gray-800',
    border: 'border-amber-100',
    accent: 'text-amber-600 dark:text-amber-400',
    hover: 'hover:border-amber-300',
  },
  'Brain health': {
    bg: 'bg-white',
    dark: 'dark:bg-gray-800',
    border: 'border-cyan-100',
    accent: 'text-cyan-600 dark:text-cyan-400',
    hover: 'hover:border-cyan-300',
  },
  'Autoimmune': {
    bg: 'bg-white',
    dark: 'dark:bg-gray-800',
    border: 'border-emerald-100',
    accent: 'text-emerald-600 dark:text-emerald-400',
    hover: 'hover:border-emerald-300',
  },
  'Mental health': {
    bg: 'bg-white',
    dark: 'dark:bg-gray-800',
    border: 'border-violet-100',
    accent: 'text-violet-600 dark:text-violet-400',
    hover: 'hover:border-violet-300',
  },
  'Relationships and Sexuality': {
    bg: 'bg-white',
    dark: 'dark:bg-gray-800',
    border: 'border-rose-100',
    accent: 'text-rose-600 dark:text-rose-400',
    hover: 'hover:border-rose-300',
  },
  'Lifestyle and Behavioral Health': {
    bg: 'bg-white',
    dark: 'dark:bg-gray-800',
    border: 'border-lime-100',
    accent: 'text-lime-600 dark:text-lime-400',
    hover: 'hover:border-lime-300',
  },
  'State of FemTech': {
    bg: 'bg-white',
    dark: 'dark:bg-gray-800',
    border: 'border-indigo-100',
    accent: 'text-indigo-600 dark:text-indigo-400',
    hover: 'hover:border-indigo-300',
  },
  'Future of FemTech': {
    bg: 'bg-white',
    dark: 'dark:bg-gray-800',
    border: 'border-sky-100',
    accent: 'text-sky-600 dark:text-sky-400',
    hover: 'hover:border-sky-300',
  },
  'Organizations': {
    bg: 'bg-white',
    dark: 'dark:bg-gray-800',
    border: 'border-teal-100',
    accent: 'text-teal-600 dark:text-teal-400',
    hover: 'hover:border-teal-300',
  },
};

// Get color theme based on category or use default
const colors = categoryColors[category] || categoryColors.default;

// Default placeholder image if no image is provided
const placeholderImage = "https://placehold.co/600x400/e9d5ff/4a044e?text=FemTechURLs";

// Debug image
console.log(`NewsCard for "${title.substring(0, 20)}..." - Image URL: ${image || 'Using placeholder'}`);
---

<div class={`${colors.bg} ${colors.dark} rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 overflow-hidden h-full flex flex-col border ${colors.border} ${colors.hover}`}>
  {image && (
    <div class="h-48 overflow-hidden">
      <img 
        src={image} 
        alt={title} 
        class="w-full h-full object-cover transition-transform duration-300 hover:scale-105"
        onerror="this.onerror=null; this.src='https://placehold.co/600x400/e9d5ff/4a044e?text=FemTechURLs';"
      />
    </div>
  )}
  {!image && (
    <div class="h-48 overflow-hidden bg-purple-100 dark:bg-purple-900">
      <img 
        src={placeholderImage} 
        alt="Placeholder" 
        class="w-full h-full object-cover opacity-60 transition-opacity duration-300 hover:opacity-80"
      />
    </div>
  )}
  
  <div class="p-5 flex-grow">
    <div class="flex justify-between items-start mb-3">
      <span class={`text-sm font-medium ${colors.accent}`}>{source}</span>
      <div class="text-xs text-gray-500 dark:text-gray-400 flex flex-col items-end">
        <span>{formattedDate}</span>
        {timeAgo && <span class="mt-0.5">{timeAgo}</span>}
      </div>
    </div>
    
    <h3 class="text-lg font-bold mb-2 text-gray-800 dark:text-gray-100">
      <a href={link} target="_blank" rel="noopener noreferrer" class={`hover:${colors.accent} transition-colors`}>
        {title}
      </a>
    </h3>
    
    <p class="text-gray-600 dark:text-gray-300 text-sm mb-4">
      {truncatedDescription || "No description available"}
    </p>
  </div>
  
  <div class="px-5 pb-5 mt-auto">
    <a 
      href={link} 
      target="_blank" 
      rel="noopener noreferrer" 
      class={`${colors.accent} hover:underline text-sm font-medium flex items-center`}
    >
      Read more
      <svg xmlns="http://www.w3.org/2000/svg" class="ml-1 h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
      </svg>
    </a>
  </div>
</div>

<script>
  // Debug image loading
  document.addEventListener('DOMContentLoaded', () => {
    const images = document.querySelectorAll('img');
    images.forEach(img => {
      img.addEventListener('error', function() {
        console.log('Image failed to load:', this.src);
        // Fallback to placeholder if image fails to load
        if (!this.src.includes('placehold.co')) {
          this.src = 'https://placehold.co/600x400/e9d5ff/4a044e?text=FemTechURLs';
        }
      });
      
      img.addEventListener('load', function() {
        if (!this.src.includes('placehold.co')) {
          console.log('Image loaded successfully:', this.src);
        }
      });
    });
  });
</script>
