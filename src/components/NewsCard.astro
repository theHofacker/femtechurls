---
import { formatDate } from '../utils/feedAggregator';

interface Props {
  title: string;
  link: string;
  description: string;
  date: Date | string;
  sourceName: string;
}

const { title, link, description, date, sourceName } = Astro.props;

// Get formatted date, safely handle errors
let formattedDate = formatDate(date);

// Truncate description if it exists
const truncatedDescription = description?.length > 150 
  ? `${description.slice(0, 150)}...` 
  : description || 'No description available';
---

<article class="bg-white rounded-lg shadow-sm border border-gray-100 hover:shadow-md transition-shadow duration-300 article-card">
  <div class="p-6">
    <div class="flex items-center text-sm text-gray-500 mb-2">
      <span class="font-medium text-purple-700">{sourceName}</span>
      <span class="mx-2">â€¢</span>
      <time>{formattedDate}</time>
    </div>
    
    <a href={link} target="_blank" rel="noopener noreferrer" class="block group">
      <h2 class="text-lg font-semibold text-gray-900 group-hover:text-purple-700 mb-2 line-clamp-2 article-title">
        {title}
      </h2>
    </a>
    
    <p class="text-gray-600 mb-4 article-description">
      {truncatedDescription}
    </p>
    
    <div class="flex justify-end">
      <a 
        href={link}
        target="_blank" 
        rel="noopener noreferrer"
        class="text-sm text-purple-700 font-medium hover:text-purple-900 inline-flex items-center"
      >
        Read more
        <svg class="ml-1 h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
        </svg>
      </a>
    </div>
  </div>
</article>
